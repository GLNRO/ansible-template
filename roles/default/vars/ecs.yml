#
# This file is part of the ansible-template project and should not be changed
#
---

# Defaults to a sane location on the region's ECR
default_docker_image_repo: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com"

### Task definitions specific.
### Optional values, uncomment to override, default values are shown below (see default/vars/main.yml for more info)
#docker_image_repo: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com"
#docker_image_name: "{{ application_name }}"
#docker_image_tag: "latest"


# ECS related
ecs_cluster_name: "{{ application_name }}"
ecs_environment_variables: []
ecs_default_port_mappings:
  - containerPort: "{{ application_port }}"
    hostPort: "{{ application_port }}"

ecs_additional_port_mappings: []
ecs_port_mappings: "{{ ecs_default_port_mappings + ecs_additional_port_mappings }}"

# Usage :
# ecs_environment_variables:
#   - name: "MY_ENV_VAR"
#     value: "{{ my_variable }}"
#   - name: "MY_SECOND_VAR"
#     value: "hardcoded"
# ecs_port_mappings:
#   - containerPort: "8080"
#     hostPort: "8080"
ecs_log_driver: "json-file" # other options include splunk, etc
ecs_log_options:         # options required based on log driver
  max-size: "4g"          # the log won't occupy all the disk space
  # max-file: "10"        # example
  # env: "ENV1,ENV2"        # example
  # labels: "label1,label2" # example

ecs_taskdefinition_cpu: "{{ resources_for_instance_type.cpu }}"
ecs_taskdefinition_memory: "{{ resources_for_instance_type.memory }}"

# ecs_volume:
#   from: /mnt
#   to: /mnt

ecs_volume_name: "mnt"
ecs_service_network_mode: "bridge"

ecs_services:
  - name: "{{ application_name }}"
    task: # A service always has a single task, which is mapped here.
      containers: # A task can have multiple containers
      - name: "{{ application_name }}"
        cpu: "{{ ecs_taskdefinition_cpu }}"
        memory: "{{ ecs_taskdefinition_memory }}"
        environment: "{{ ecs_environment_variables if ecs_environment_variables|length > 0 else omit }}"
        portMappings: "{{ ecs_port_mappings if ecs_port_mappings|length > 0 else omit }}"
        logConfiguration:
          logDriver: "{{ ecs_log_driver }}"
          options: "{{ ecs_log_options }}"
        mountPoints: '{{ [{"containerPath": ecs_volume.to, "sourceVolume": ecs_volume_name}] if ecs_volume is defined else [] }}'
    volumes: '{{ [{"name": ecs_volume_name, "host":{"sourcePath": ecs_volume.from }}] if ecs_volume is defined else [] }}'
    network_mode: "{{ ecs_service_network_mode }}"
